// <auto-generated />
using fpv_info.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace fpv_info.Migrations
{
    [DbContext(typeof(PartsContext))]
    [Migration("20180120215315_Mg210118")]
    partial class Mg210118
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("fpv_info.Models.AccessoryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description_en");

                    b.Property<string>("Description_ru");

                    b.Property<bool>("IsCompared");

                    b.Property<int?>("ManufacturerId");

                    b.Property<string>("Name_en");

                    b.Property<string>("Name_ru");

                    b.Property<float>("Weight");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Accessories");
                });

            modelBuilder.Entity("fpv_info.Models.Antenna", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description_en");

                    b.Property<string>("Description_ru");

                    b.Property<bool>("IsCompared");

                    b.Property<int?>("ManufacturerId");

                    b.Property<string>("Name_en");

                    b.Property<string>("Name_ru");

                    b.Property<float>("Weight");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Antennas");
                });

            modelBuilder.Entity("fpv_info.Models.Battery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description_en");

                    b.Property<string>("Description_ru");

                    b.Property<bool>("IsCompared");

                    b.Property<int?>("ManufacturerId");

                    b.Property<string>("Name_en");

                    b.Property<string>("Name_ru");

                    b.Property<float>("Weight");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Batteries");
                });

            modelBuilder.Entity("fpv_info.Models.Camera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description_en");

                    b.Property<string>("Description_ru");

                    b.Property<bool>("IsCompared");

                    b.Property<int?>("ManufacturerId");

                    b.Property<string>("Name_en");

                    b.Property<string>("Name_ru");

                    b.Property<float>("Weight");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Cameras");
                });

            modelBuilder.Entity("fpv_info.Models.Charger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description_en");

                    b.Property<string>("Description_ru");

                    b.Property<bool>("IsCompared");

                    b.Property<int?>("ManufacturerId");

                    b.Property<string>("Name_en");

                    b.Property<string>("Name_ru");

                    b.Property<float>("Weight");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Chargers");
                });

            modelBuilder.Entity("fpv_info.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description_en");

                    b.Property<string>("Description_ru");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("fpv_info.Models.ESC", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description_en");

                    b.Property<string>("Description_ru");

                    b.Property<bool>("IsCompared");

                    b.Property<int?>("ManufacturerId");

                    b.Property<string>("Name_en");

                    b.Property<string>("Name_ru");

                    b.Property<float>("Weight");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("ESCs");
                });

            modelBuilder.Entity("fpv_info.Models.FileModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AccessoryModelId");

                    b.Property<string>("Alt");

                    b.Property<int?>("AntennaId");

                    b.Property<int?>("BatteryId");

                    b.Property<int?>("CameraId");

                    b.Property<int?>("ChargerId");

                    b.Property<int?>("ESCId");

                    b.Property<int?>("FlightControllerId");

                    b.Property<int?>("FrameId");

                    b.Property<int?>("FuselageId");

                    b.Property<int?>("GoggleId");

                    b.Property<int?>("LightId");

                    b.Property<int?>("MotorId");

                    b.Property<string>("Name");

                    b.Property<int?>("PDBId");

                    b.Property<string>("Path");

                    b.Property<int?>("PropId");

                    b.Property<int?>("RCOtherId");

                    b.Property<int?>("ReceiverId");

                    b.Property<int?>("ServoId");

                    b.Property<int?>("TransmitterId");

                    b.Property<int?>("VideoReceiverId");

                    b.Property<int?>("VideoTransmitterId");

                    b.HasKey("Id");

                    b.HasIndex("AccessoryModelId");

                    b.HasIndex("AntennaId");

                    b.HasIndex("BatteryId");

                    b.HasIndex("CameraId");

                    b.HasIndex("ChargerId");

                    b.HasIndex("ESCId");

                    b.HasIndex("FlightControllerId");

                    b.HasIndex("FrameId");

                    b.HasIndex("FuselageId");

                    b.HasIndex("GoggleId");

                    b.HasIndex("LightId");

                    b.HasIndex("MotorId");

                    b.HasIndex("PDBId");

                    b.HasIndex("PropId");

                    b.HasIndex("RCOtherId");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("ServoId");

                    b.HasIndex("TransmitterId");

                    b.HasIndex("VideoReceiverId");

                    b.HasIndex("VideoTransmitterId");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("fpv_info.Models.FlightController", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description_en");

                    b.Property<string>("Description_ru");

                    b.Property<bool>("IsCompared");

                    b.Property<int?>("ManufacturerId");

                    b.Property<string>("Name_en");

                    b.Property<string>("Name_ru");

                    b.Property<int?>("ProcessorId");

                    b.Property<float>("Weight");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("ProcessorId");

                    b.ToTable("FlightControllers");
                });

            modelBuilder.Entity("fpv_info.Models.Frame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description_en");

                    b.Property<string>("Description_ru");

                    b.Property<bool>("IsCompared");

                    b.Property<int?>("ManufacturerId");

                    b.Property<string>("Name_en");

                    b.Property<string>("Name_ru");

                    b.Property<int?>("TypeId");

                    b.Property<float>("Weight");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("TypeId");

                    b.ToTable("Frames");
                });

            modelBuilder.Entity("fpv_info.Models.FrameType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("FrameTypes");
                });

            modelBuilder.Entity("fpv_info.Models.Fuselage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description_en");

                    b.Property<string>("Description_ru");

                    b.Property<bool>("IsCompared");

                    b.Property<int?>("ManufacturerId");

                    b.Property<string>("Name_en");

                    b.Property<string>("Name_ru");

                    b.Property<int?>("TypeId");

                    b.Property<float>("Weight");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("TypeId");

                    b.ToTable("Fuselages");
                });

            modelBuilder.Entity("fpv_info.Models.FuselageType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("FuselageTypes");
                });

            modelBuilder.Entity("fpv_info.Models.Goggle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description_en");

                    b.Property<string>("Description_ru");

                    b.Property<bool>("IsCompared");

                    b.Property<int?>("ManufacturerId");

                    b.Property<string>("Name_en");

                    b.Property<string>("Name_ru");

                    b.Property<float>("Weight");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Goggles");
                });

            modelBuilder.Entity("fpv_info.Models.Light", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description_en");

                    b.Property<string>("Description_ru");

                    b.Property<bool>("IsCompared");

                    b.Property<int?>("ManufacturerId");

                    b.Property<string>("Name_en");

                    b.Property<string>("Name_ru");

                    b.Property<float>("Weight");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Lights");
                });

            modelBuilder.Entity("fpv_info.Models.Link", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Path");

                    b.Property<int?>("StoreId");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.ToTable("Links");
                });

            modelBuilder.Entity("fpv_info.Models.Motor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description_en");

                    b.Property<string>("Description_ru");

                    b.Property<bool>("IsCompared");

                    b.Property<int?>("ManufacturerId");

                    b.Property<string>("Name_en");

                    b.Property<string>("Name_ru");

                    b.Property<float>("Weight");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Motors");
                });

            modelBuilder.Entity("fpv_info.Models.PDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description_en");

                    b.Property<string>("Description_ru");

                    b.Property<bool>("IsCompared");

                    b.Property<int?>("ManufacturerId");

                    b.Property<string>("Name_en");

                    b.Property<string>("Name_ru");

                    b.Property<float>("Weight");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("PDBs");
                });

            modelBuilder.Entity("fpv_info.Models.ProcessorModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description_en");

                    b.Property<string>("Description_ru");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Processors");
                });

            modelBuilder.Entity("fpv_info.Models.Prop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description_en");

                    b.Property<string>("Description_ru");

                    b.Property<bool>("IsCompared");

                    b.Property<int?>("ManufacturerId");

                    b.Property<string>("Name_en");

                    b.Property<string>("Name_ru");

                    b.Property<float>("Weight");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Props");
                });

            modelBuilder.Entity("fpv_info.Models.RCOther", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description_en");

                    b.Property<string>("Description_ru");

                    b.Property<bool>("IsCompared");

                    b.Property<int?>("ManufacturerId");

                    b.Property<string>("Name_en");

                    b.Property<string>("Name_ru");

                    b.Property<float>("Weight");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("RCOthers");
                });

            modelBuilder.Entity("fpv_info.Models.Receiver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description_en");

                    b.Property<string>("Description_ru");

                    b.Property<bool>("IsCompared");

                    b.Property<int?>("ManufacturerId");

                    b.Property<string>("Name_en");

                    b.Property<string>("Name_ru");

                    b.Property<float>("Weight");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Receivers");
                });

            modelBuilder.Entity("fpv_info.Models.Servo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description_en");

                    b.Property<string>("Description_ru");

                    b.Property<bool>("IsCompared");

                    b.Property<int?>("ManufacturerId");

                    b.Property<string>("Name_en");

                    b.Property<string>("Name_ru");

                    b.Property<float>("Weight");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Servos");
                });

            modelBuilder.Entity("fpv_info.Models.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description_en");

                    b.Property<string>("Description_ru");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("fpv_info.Models.Transmitter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description_en");

                    b.Property<string>("Description_ru");

                    b.Property<bool>("IsCompared");

                    b.Property<int?>("ManufacturerId");

                    b.Property<string>("Name_en");

                    b.Property<string>("Name_ru");

                    b.Property<float>("Weight");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Transmitters");
                });

            modelBuilder.Entity("fpv_info.Models.VideoReceiver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description_en");

                    b.Property<string>("Description_ru");

                    b.Property<bool>("IsCompared");

                    b.Property<int?>("ManufacturerId");

                    b.Property<string>("Name_en");

                    b.Property<string>("Name_ru");

                    b.Property<float>("Weight");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("VideoReceivers");
                });

            modelBuilder.Entity("fpv_info.Models.VideoTransmitter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description_en");

                    b.Property<string>("Description_ru");

                    b.Property<bool>("IsCompared");

                    b.Property<int?>("ManufacturerId");

                    b.Property<string>("Name_en");

                    b.Property<string>("Name_ru");

                    b.Property<float>("Weight");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("VideoTransmitters");
                });

            modelBuilder.Entity("fpv_info.Models.AccessoryModel", b =>
                {
                    b.HasOne("fpv_info.Models.Company", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId");
                });

            modelBuilder.Entity("fpv_info.Models.Antenna", b =>
                {
                    b.HasOne("fpv_info.Models.Company", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId");
                });

            modelBuilder.Entity("fpv_info.Models.Battery", b =>
                {
                    b.HasOne("fpv_info.Models.Company", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId");
                });

            modelBuilder.Entity("fpv_info.Models.Camera", b =>
                {
                    b.HasOne("fpv_info.Models.Company", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId");
                });

            modelBuilder.Entity("fpv_info.Models.Charger", b =>
                {
                    b.HasOne("fpv_info.Models.Company", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId");
                });

            modelBuilder.Entity("fpv_info.Models.ESC", b =>
                {
                    b.HasOne("fpv_info.Models.Company", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId");
                });

            modelBuilder.Entity("fpv_info.Models.FileModel", b =>
                {
                    b.HasOne("fpv_info.Models.AccessoryModel")
                        .WithMany("Images")
                        .HasForeignKey("AccessoryModelId");

                    b.HasOne("fpv_info.Models.Antenna")
                        .WithMany("Images")
                        .HasForeignKey("AntennaId");

                    b.HasOne("fpv_info.Models.Battery")
                        .WithMany("Images")
                        .HasForeignKey("BatteryId");

                    b.HasOne("fpv_info.Models.Camera")
                        .WithMany("Images")
                        .HasForeignKey("CameraId");

                    b.HasOne("fpv_info.Models.Charger")
                        .WithMany("Images")
                        .HasForeignKey("ChargerId");

                    b.HasOne("fpv_info.Models.ESC")
                        .WithMany("Images")
                        .HasForeignKey("ESCId");

                    b.HasOne("fpv_info.Models.FlightController")
                        .WithMany("Images")
                        .HasForeignKey("FlightControllerId");

                    b.HasOne("fpv_info.Models.Frame")
                        .WithMany("Images")
                        .HasForeignKey("FrameId");

                    b.HasOne("fpv_info.Models.Fuselage")
                        .WithMany("Images")
                        .HasForeignKey("FuselageId");

                    b.HasOne("fpv_info.Models.Goggle")
                        .WithMany("Images")
                        .HasForeignKey("GoggleId");

                    b.HasOne("fpv_info.Models.Light")
                        .WithMany("Images")
                        .HasForeignKey("LightId");

                    b.HasOne("fpv_info.Models.Motor")
                        .WithMany("Images")
                        .HasForeignKey("MotorId");

                    b.HasOne("fpv_info.Models.PDB")
                        .WithMany("Images")
                        .HasForeignKey("PDBId");

                    b.HasOne("fpv_info.Models.Prop")
                        .WithMany("Images")
                        .HasForeignKey("PropId");

                    b.HasOne("fpv_info.Models.RCOther")
                        .WithMany("Images")
                        .HasForeignKey("RCOtherId");

                    b.HasOne("fpv_info.Models.Receiver")
                        .WithMany("Images")
                        .HasForeignKey("ReceiverId");

                    b.HasOne("fpv_info.Models.Servo")
                        .WithMany("Images")
                        .HasForeignKey("ServoId");

                    b.HasOne("fpv_info.Models.Transmitter")
                        .WithMany("Images")
                        .HasForeignKey("TransmitterId");

                    b.HasOne("fpv_info.Models.VideoReceiver")
                        .WithMany("Images")
                        .HasForeignKey("VideoReceiverId");

                    b.HasOne("fpv_info.Models.VideoTransmitter")
                        .WithMany("Images")
                        .HasForeignKey("VideoTransmitterId");
                });

            modelBuilder.Entity("fpv_info.Models.FlightController", b =>
                {
                    b.HasOne("fpv_info.Models.Company", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId");

                    b.HasOne("fpv_info.Models.ProcessorModel", "Processor")
                        .WithMany()
                        .HasForeignKey("ProcessorId");
                });

            modelBuilder.Entity("fpv_info.Models.Frame", b =>
                {
                    b.HasOne("fpv_info.Models.Company", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId");

                    b.HasOne("fpv_info.Models.FrameType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");
                });

            modelBuilder.Entity("fpv_info.Models.Fuselage", b =>
                {
                    b.HasOne("fpv_info.Models.Company", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId");

                    b.HasOne("fpv_info.Models.FuselageType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");
                });

            modelBuilder.Entity("fpv_info.Models.Goggle", b =>
                {
                    b.HasOne("fpv_info.Models.Company", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId");
                });

            modelBuilder.Entity("fpv_info.Models.Light", b =>
                {
                    b.HasOne("fpv_info.Models.Company", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId");
                });

            modelBuilder.Entity("fpv_info.Models.Link", b =>
                {
                    b.HasOne("fpv_info.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId");
                });

            modelBuilder.Entity("fpv_info.Models.Motor", b =>
                {
                    b.HasOne("fpv_info.Models.Company", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId");
                });

            modelBuilder.Entity("fpv_info.Models.PDB", b =>
                {
                    b.HasOne("fpv_info.Models.Company", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId");
                });

            modelBuilder.Entity("fpv_info.Models.Prop", b =>
                {
                    b.HasOne("fpv_info.Models.Company", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId");
                });

            modelBuilder.Entity("fpv_info.Models.RCOther", b =>
                {
                    b.HasOne("fpv_info.Models.Company", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId");
                });

            modelBuilder.Entity("fpv_info.Models.Receiver", b =>
                {
                    b.HasOne("fpv_info.Models.Company", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId");
                });

            modelBuilder.Entity("fpv_info.Models.Servo", b =>
                {
                    b.HasOne("fpv_info.Models.Company", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId");
                });

            modelBuilder.Entity("fpv_info.Models.Transmitter", b =>
                {
                    b.HasOne("fpv_info.Models.Company", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId");
                });

            modelBuilder.Entity("fpv_info.Models.VideoReceiver", b =>
                {
                    b.HasOne("fpv_info.Models.Company", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId");
                });

            modelBuilder.Entity("fpv_info.Models.VideoTransmitter", b =>
                {
                    b.HasOne("fpv_info.Models.Company", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId");
                });
#pragma warning restore 612, 618
        }
    }
}
